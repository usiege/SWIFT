sil_stage canonical

import Builtin
import Swift
import SwiftShims

import Foundation

@_hasStorage @_hasInitialValue var age: Int { get set }

@_hasStorage @_hasInitialValue var age1: Double? { get set }

@_hasStorage @_hasInitialValue var age2: Double { get set }

// age
sil_global hidden @$s4main3ageSivp : $Int

// age1
sil_global hidden @$s4main4age1SdSgvp : $Optional<Double>

// age2
sil_global hidden @$s4main4age2Sdvp : $Double

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  alloc_global @$s4main3ageSivp                   // id: %2
  %3 = global_addr @$s4main3ageSivp : $*Int       // users: %6, %17, %9
  %4 = integer_literal $Builtin.Int64, 10         // user: %5
  %5 = struct $Int (%4 : $Builtin.Int64)          // user: %6
  store %5 to %3 : $*Int                          // id: %6
  alloc_global @$s4main4age1SdSgvp                // id: %7
  %8 = global_addr @$s4main4age1SdSgvp : $*Optional<Double> // users: %13, %11
  %9 = begin_access [read] [dynamic] %3 : $*Int   // user: %10
  end_access %9 : $*Int                           // id: %10
  %11 = init_enum_data_addr %8 : $*Optional<Double>, #Optional.some!enumelt.1
  br bb1                                          // id: %12

bb1:                                              // Preds: bb0
  inject_enum_addr %8 : $*Optional<Double>, #Optional.none!enumelt // id: %13
  br bb2                                          // id: %14

bb2:                                              // Preds: bb1
  alloc_global @$s4main4age2Sdvp                  // id: %15
  %16 = global_addr @$s4main4age2Sdvp : $*Double  // user: %19
  %17 = begin_access [read] [dynamic] %3 : $*Int  // user: %18
  end_access %17 : $*Int                          // id: %18
  store undef to %16 : $*Double                   // id: %19
  %20 = builtin "int_trap"() : $()
  unreachable                                     // id: %21
} // end sil function 'main'

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'



